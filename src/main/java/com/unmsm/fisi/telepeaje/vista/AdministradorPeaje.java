/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.unmsm.fisi.telepeaje.vista;

import com.unmsm.fisi.telepeaje.contenedor.Peaje;
import com.unmsm.fisi.telepeaje.contenedor.ProveedorMantenimiento;
import com.unmsm.fisi.telepeaje.contenedor.Recaudacion;
import com.unmsm.fisi.telepeaje.firebase.PeajeFirebase;
import com.unmsm.fisi.telepeaje.firebase.ProveedorFirebase;
import com.unmsm.fisi.telepeaje.firebase.RecaudacionFirebase;
import com.unmsm.fisi.telepeaje.soporte.Constante;
import com.unmsm.fisi.telepeaje.soporte.Directorio;
import java.awt.Image;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CARLOS
 */
public class AdministradorPeaje extends javax.swing.JFrame {
    private List<ProveedorMantenimiento> lProvedorPeaje;
    
    /**
     * Creates new form AdministradorPeaje
     */
    public AdministradorPeaje() {
        initComponents();
        
        ImageIcon iconLogo = new ImageIcon(Directorio.devolverDirectorioActual() + Directorio.imagenApp);
        this.setIconImage(iconLogo.getImage());
        
        ImageIcon icon = new ImageIcon(Directorio.devolverDirectorioActual() + Directorio.botonRegistrar);
        Icon icono = new ImageIcon(icon.getImage().getScaledInstance(24, 24, Image.SCALE_DEFAULT));
        botonRegistrarProveedor.setIcon(icono);

        ImageIcon icon2 = new ImageIcon(Directorio.devolverDirectorioActual() + Directorio.botonActualizar);
        Icon icono2 = new ImageIcon(icon2.getImage().getScaledInstance(24, 24, Image.SCALE_DEFAULT));
        botonActualizarProveedor.setIcon(icono2);

        ImageIcon icon3 = new ImageIcon(Directorio.devolverDirectorioActual() + Directorio.botonEliminar);
        Icon icono3 = new ImageIcon(icon3.getImage().getScaledInstance(24, 24, Image.SCALE_DEFAULT));
        botonEliminarProveedor.setIcon(icono3);
        
        ImageIcon icon4 = new ImageIcon(Directorio.devolverDirectorioActual() + Directorio.botonAtras);
        Icon icono4 = new ImageIcon(icon4.getImage().getScaledInstance(30, 30, Image.SCALE_DEFAULT));
        botonAtras.setIcon(icono4);
        
        llenarTablaProveedor();
        PeajeFirebase.listarPeaje(this);
    }

    public void llenarTablaProveedor() {
        lProvedorPeaje = ProveedorFirebase.listarMatenimientoProveedor();
        if (lProvedorPeaje != null) {
            String aTitulo[] = {"Tipo de Doc.", "N° Doc.", "Empresa", "Direccion", "Celular", "Correo electrónico"};
            String[][] mData = new String[lProvedorPeaje.size()][6];

            int i = 0;
            if (!lProvedorPeaje.isEmpty()) {
                for (ProveedorMantenimiento oProveedorMantenimiento : lProvedorPeaje) {
                    mData[i][0] = oProveedorMantenimiento.getsTipoDocumento();
                    mData[i][1] = oProveedorMantenimiento.getsNumeroDocumento();
                    mData[i][2] = oProveedorMantenimiento.getsEmpresa();
                    mData[i][3] = oProveedorMantenimiento.getsDireccion();
                    mData[i][4] = oProveedorMantenimiento.getsTelefono();
                    mData[i][5] = oProveedorMantenimiento.getsCorreo();
                    i++;
                }
                DefaultTableModel tablaModelo = new DefaultTableModel(mData, aTitulo);

                tablaProveedor.setModel(tablaModelo);
            }
        }
    }
    
    public void llenarPeaje(List<Peaje> lPeaje) {
        int i = 0;

        if (lPeaje != null) {
            String aTitulo[] = {"Nombre", "Distrito", "Ubicación", "Cantidad de vehículos"};
            String[][] mData = new String[lPeaje.size()][4];
            for (Peaje oPeaje : lPeaje) {
                Recaudacion  oRecaudacion = RecaudacionFirebase.existenciaRecaudacion(Constante.sIdentificadorPeaje);
                
                mData[i][0] = oPeaje.getsNombre();
                mData[i][1] = oPeaje.getsDistrito();
                mData[i][2] = oPeaje.getsUbicacion();
                mData[i][3] = oRecaudacion==null?"0 vehículos": oRecaudacion.getnVehiculos()+" vehículos";
                i++;
            }
            DefaultTableModel tablaModelo = new DefaultTableModel(mData, aTitulo);

            tablaPeaje.setModel(tablaModelo);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelProveedor = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProveedor = new javax.swing.JTable();
        botonRegistrarProveedor = new javax.swing.JButton();
        botonActualizarProveedor = new javax.swing.JButton();
        botonEliminarProveedor = new javax.swing.JButton();
        panelPeaje = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaPeaje = new javax.swing.JTable();
        botonAtras = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tablaProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaProveedor);

        botonRegistrarProveedor.setText("Registrar");
        botonRegistrarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarProveedorActionPerformed(evt);
            }
        });

        botonActualizarProveedor.setText("Actualizar");
        botonActualizarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActualizarProveedorActionPerformed(evt);
            }
        });

        botonEliminarProveedor.setText("Eliminar");
        botonEliminarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminarProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelProveedorLayout = new javax.swing.GroupLayout(panelProveedor);
        panelProveedor.setLayout(panelProveedorLayout);
        panelProveedorLayout.setHorizontalGroup(
            panelProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProveedorLayout.createSequentialGroup()
                .addGroup(panelProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelProveedorLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonRegistrarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(botonActualizarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(botonEliminarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelProveedorLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelProveedorLayout.setVerticalGroup(
            panelProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProveedorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelProveedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonActualizarProveedor)
                    .addComponent(botonEliminarProveedor)
                    .addComponent(botonRegistrarProveedor))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        jTabbedPane1.addTab("Proveedor", panelProveedor);

        tablaPeaje.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(tablaPeaje);

        javax.swing.GroupLayout panelPeajeLayout = new javax.swing.GroupLayout(panelPeaje);
        panelPeaje.setLayout(panelPeajeLayout);
        panelPeajeLayout.setHorizontalGroup(
            panelPeajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPeajeLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 856, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        panelPeajeLayout.setVerticalGroup(
            panelPeajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPeajeLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Peajes", panelPeaje);

        botonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(botonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonRegistrarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarProveedorActionPerformed
        FormularioRegistrarProveedor oRegistrarProveedor = new FormularioRegistrarProveedor(this);
        oRegistrarProveedor.setVisible(true);
        oRegistrarProveedor.setLocationRelativeTo(null);

        this.setVisible(false);
    }//GEN-LAST:event_botonRegistrarProveedorActionPerformed

    private void botonActualizarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActualizarProveedorActionPerformed
        int numeroFila = tablaProveedor.getSelectedRow();
        if (numeroFila != -1) {
            FormularioActualizarProveedor oActualizarProveedor = new FormularioActualizarProveedor(this, lProvedorPeaje.get(numeroFila).getsIdentificador());
            oActualizarProveedor.setVisible(true);
            oActualizarProveedor.setLocationRelativeTo(null);
            oActualizarProveedor.llenarCampos(lProvedorPeaje.get(numeroFila));

            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Antes de actualizar un registro, debe seleccionar un proveedor de la tabla.", "Actualizar proveedor", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_botonActualizarProveedorActionPerformed

    private void botonEliminarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminarProveedorActionPerformed
        int numeroFila = tablaProveedor.getSelectedRow();
        if (numeroFila != -1) {
            ProveedorMantenimiento oProveedorMantenimiento = lProvedorPeaje.get(numeroFila);

            int seleccion = JOptionPane.showOptionDialog(null, "¿Desea eliminar el proveedor: " + oProveedorMantenimiento.getsEmpresa() + " ?",
                "Eliminación de proveedor", JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE, null,// null para icono por defecto.
                new Object[]{"Aceptar", "Cancelar"}, "Cancelar");
            if (seleccion == 0) {
                boolean bEliminacion = ProveedorFirebase.eliminarProveedor(oProveedorMantenimiento.getsIdentificador());

                if (bEliminacion) {
                    llenarTablaProveedor();
                    JOptionPane.showMessageDialog(null, "Se eliminó un proveedor de manera exitosa", "Eliminación de Proveedor", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Ocurrió un error al eliminar", "Error de eliminar", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Antes de eliminar un registro, debe seleccionar un mantenimiento de la tabla.", "Eliminación de un mantenimiento", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_botonEliminarProveedorActionPerformed

    private void botonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasActionPerformed
        this.dispose();
        Perfil oPerfil = new Perfil();
        oPerfil.setVisible(true);
        oPerfil.setLocationRelativeTo(null);
    }//GEN-LAST:event_botonAtrasActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizarProveedor;
    private javax.swing.JButton botonAtras;
    private javax.swing.JButton botonEliminarProveedor;
    private javax.swing.JButton botonRegistrarProveedor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelPeaje;
    private javax.swing.JPanel panelProveedor;
    private javax.swing.JTable tablaPeaje;
    private javax.swing.JTable tablaProveedor;
    // End of variables declaration//GEN-END:variables
}
